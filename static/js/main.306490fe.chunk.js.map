{"version":3,"sources":["ThemeContext.js","TodoItem.js","TodoList.js","ThemeToggle.js","Footer.js","InputArea.js","App.js","serviceWorker.js","index.js"],"names":["ThemeContext","createContext","ThemeContextProvider","props","light","color","itemBackground","itemBackgroundOnHover","backgroundColor","emptyColor","footerColor","dark","themePref","JSON","parse","localStorage","getItem","_useState","useState","isLightTheme","lightTheme","darkTheme","_useState2","Object","slicedToArray","state","setState","useEffect","window","addEventListener","setItem","stringify","removeEventListener","react_default","a","createElement","Provider","value","objectSpread","changeTheme","prev","children","Container","styled","div","_templateObject","TodoItem","simpleDialog","_useContext","useContext","removeIsMouseEnter","setRemoveIsMouseEnter","_useState3","_useState4","itemIsMouseEnter","setItemIsMouseEnter","_useState5","_useState6","detailsIsMouseEnter","setDetailsIsMouseEnter","todoitemStyle","todoitemStyleDragged","boxShadow","removeStyle","detailsStyle","itemStyle","todo","completed","textDecoration","fontStyle","dialogStyles","position","borderRadius","overlayStyles","react_beautiful_dnd_esm","draggableId","id","toString","index","provided","snapshot","assign","draggableProps","dragHandleProps","ref","innerRef","className","style","isDragging","onClick","handleItemClick","onMouseEnter","onMouseLeave","type","checked","text","show","fontSize","handleRemoveClick","lib_default","hideOnOverlayClicked","textAlign","TodoList","todolistStyle","emptyStyle","data","length","map","todoItem","src_TodoItem","key","placeholder","ThemeToggle","isMouseEnter","setIsMouseEnter","Footer","src_ThemeToggle","InputArea","setTodoItem","inputAreaStyle","buttonStyle","textboxStyle","name","onChange","event","target","preventDefault","handleSubmit","App","setData","item","filter","handleUnload","src_ThemeContext","onDragEnd","result","destination","source","newArray","Array","from","splice","droppableId","uuidv4","src_TodoList","droppableProps","src_InputArea","replace","concat","src_Footer","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.306490fe.chunk.js","sourcesContent":["import React, { useState, createContext, useEffect } from 'react';\n\nexport const ThemeContext = createContext();\n\nfunction ThemeContextProvider(props){\n    const light = {\n        color: '#0A0A0A',\n        itemBackground: '#D0D0D0',\n        itemBackgroundOnHover: '#B0B0B0',\n        backgroundColor: '#E6E6E6',\n        emptyColor: '#B0B0B0',\n        footerColor: 'white'\n    }\n    const dark = {\n        color: 'whitesmoke',\n        itemBackground: '#282828',\n        itemBackgroundOnHover: '#404040',\n        backgroundColor: '#191919',\n        emptyColor: '#404040',\n        footerColor: 'black'\n    }\n    \n    const themePref = JSON.parse(localStorage.getItem('theme-pref'))\n    const [state, setState] = useState({ isLightTheme: themePref ? themePref.isLightTheme : false,  lightTheme: light, darkTheme: dark });\n\n    function changeTheme(){\n        setState(prev => ({\n            isLightTheme: !prev.isLightTheme,\n            lightTheme: light,\n            darkTheme: dark\n        }))\n    }\n\n    useEffect(()=>{\n        window.addEventListener('beforeunload', () => localStorage.setItem('theme-pref', JSON.stringify({isLightTheme: state.isLightTheme})));\n        return () => window.removeEventListener('beforeunload', () => localStorage.setItem('theme-pref', JSON.stringify({isLightTheme: state.isLightTheme})));\n    });\n\n    return(\n        <ThemeContext.Provider value={{...state, changeTheme}}>\n            {props.children}\n        </ThemeContext.Provider>\n    );\n}\n\nexport default ThemeContextProvider;","import React, {useContext, useState} from \"react\";\nimport \"./TodoItem.css\";\nimport { ThemeContext } from \"./ThemeContext\";\nimport styled from 'styled-components';\nimport {Draggable} from 'react-beautiful-dnd';\n// import uuidv4 from 'uuid/v4';\nimport SkyLight from 'react-skylight';\n\nconst Container = styled.div``\n\nfunction TodoItem(props){\n    const {isLightTheme, lightTheme, darkTheme} = useContext(ThemeContext);\n    const [removeIsMouseEnter, setRemoveIsMouseEnter] = useState(false);\n    const [itemIsMouseEnter, setItemIsMouseEnter] = useState(false);\n    const [detailsIsMouseEnter, setDetailsIsMouseEnter] = useState(false);\n\n    // the following variable is used for react skylight modal\n    let simpleDialog;\n\n    const todoitemStyle = isLightTheme ? \n    itemIsMouseEnter ? {backgroundColor: lightTheme.itemBackgroundOnHover} : {backgroundColor: lightTheme.itemBackground}\n    :\n    itemIsMouseEnter ? {backgroundColor: darkTheme.itemBackgroundOnHover} : {backgroundColor: darkTheme.itemBackground}\n\n    const todoitemStyleDragged = isLightTheme ? {\n        boxShadow: \"5px 10px 18px grey\",\n        ...todoitemStyle\n    } : {\n        boxShadow: \"5px 10px 18px black\",\n        ...todoitemStyle\n    }\n\n    const removeStyle = isLightTheme ? \n        (removeIsMouseEnter ? {backgroundColor: lightTheme.itemBackground, color: lightTheme.color} : {backgroundColor: \"Transparent\", color: lightTheme.color}) : \n        (removeIsMouseEnter ? {backgroundColor: darkTheme.itemBackground, color: darkTheme.color} : {backgroundColor: \"Transparent\", color: darkTheme.color})\n    \n    const detailsStyle = isLightTheme ?\n        (detailsIsMouseEnter ? {backgroundColor: lightTheme.itemBackground, color: lightTheme.color} : {backgroundColor: \"Transparent\", color: lightTheme.color}) : \n        (detailsIsMouseEnter ? {backgroundColor: darkTheme.itemBackground, color: darkTheme.color} : {backgroundColor: \"Transparent\", color: darkTheme.color})\n\n    const itemStyle = {\n        color: !props.todo.completed ? (isLightTheme ? lightTheme.color: darkTheme.color) : \"#505050\",\n        textDecoration: props.todo.completed && \"line-through\",\n        fontStyle: props.todo.completed && \"italic\"\n    }\n\n    const dialogStyles = {\n        position: 'absolute',\n        borderRadius: '5px',\n        color: isLightTheme ? lightTheme.color : darkTheme.color,\n        backgroundColor: isLightTheme ? lightTheme.backgroundColor : darkTheme.backgroundColor\n    }\n\n    const overlayStyles = {\n        backgroundColor: 'rgba(0,0,0,0.8)'\n    }\n\n    return (\n        <Draggable draggableId={props.todo.id.toString()} index={props.index}>\n            {(provided, snapshot) => (\n                <Container {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\n                    <div className=\"todo-item\" style={snapshot.isDragging ? todoitemStyleDragged : todoitemStyle} onClick={() => props.handleItemClick(props.todo.id)} onMouseEnter={() => setItemIsMouseEnter(true)} onMouseLeave={() => setItemIsMouseEnter(false)} >\n                        <input type=\"checkbox\" checked={props.todo.completed} />\n                        <p style={itemStyle}>{props.todo.text}</p>\n                        <button id=\"details\" \n                            onClick={() => \n                                {props.handleItemClick(props.todo.id)\n                                simpleDialog.show()}} \n                            onMouseEnter={() => setDetailsIsMouseEnter(true)} onMouseLeave={() => setDetailsIsMouseEnter(false)} style={{...detailsStyle, fontSize: '14px'}}>Show Details</button>\n                        <button id=\"remove\" onClick={() => props.handleRemoveClick(props.todo.id)} onMouseEnter={()=>setRemoveIsMouseEnter(true)} onMouseLeave={()=>setRemoveIsMouseEnter(false)} style={{...removeStyle, fontSize: '14px'}}>&times;</button>\n                    </div>\n\n                    <SkyLight hideOnOverlayClicked ref={ref => simpleDialog = ref} dialogStyles={dialogStyles} overlayStyles={overlayStyles}>\n                        Task Title:\n                        <h1 style={{textAlign: 'center'}}>{props.todo.text}</h1>\n                        Status: \n                        <p style={{textAlign:'center'}}>{props.todo.completed ? 'Completed' : 'In Progress'}</p>\n                    </SkyLight>\n                </Container>\n            )}\n        </Draggable>\n    );\n}\n\nexport default TodoItem;","import React, {useContext} from \"react\";\nimport \"./TodoList.css\";\nimport TodoItem from \"./TodoItem\";\nimport { ThemeContext } from \"./ThemeContext\";\n\nfunction TodoList(props){\n    const {isLightTheme, lightTheme, darkTheme} = useContext(ThemeContext);\n\n    const todolistStyle = isLightTheme ? {backgroundColor: lightTheme.backgroundColor} : {backgroundColor: darkTheme.backgroundColor}\n    const emptyStyle = isLightTheme ? {color: lightTheme.emptyColor} : {color: darkTheme.emptyColor}\n\n    return (\n        <div className=\"todo-list\" style={todolistStyle} ref={props.innerRef}>\n            {props.data.length !== 0 ?\n                (props.data.map( (todoItem, index) => <TodoItem key={todoItem.id} todo={todoItem} index = {index} handleItemClick={props.handleItemClick} handleRemoveClick={props.handleRemoveClick}/>)) :\n                (<p className=\"empty\" style={emptyStyle}>Nothing ToDo.</p>)\n            }\n            {props.placeholder}\n        </div>\n    );\n}\n\nexport default TodoList;","import React, {useContext, useState} from 'react';\nimport './ThemeToggle.css';\nimport { ThemeContext } from './ThemeContext';\n\nfunction ThemeToggle(){\n    const {isLightTheme, lightTheme, darkTheme, changeTheme} = useContext(ThemeContext)\n    const [isMouseEnter, setIsMouseEnter] = useState(false);\n\n    const style = isLightTheme ? \n    (isMouseEnter ? {backgroundColor: lightTheme.itemBackgroundOnHover, color: lightTheme.color} : {backgroundColor: 'Transparent', color: lightTheme.color}) : \n    (isMouseEnter ? {backgroundColor: darkTheme.itemBackgroundOnHover, color: darkTheme.color} : {backgroundColor: 'Transparent', color: darkTheme.color})\n\n    return (\n        <button className='theme-toggle' onClick={changeTheme} style={style} onMouseEnter={() => setIsMouseEnter(true)} onMouseLeave={() => setIsMouseEnter(false)}>\n            Change Theme\n        </button>\n    );\n}\n\nexport default ThemeToggle;","import React, {useContext} from \"react\";\nimport './Footer.css';\nimport {ThemeContext} from './ThemeContext';\nimport ThemeToggle from './ThemeToggle';\n\nfunction Footer(){\n    const {isLightTheme, lightTheme, darkTheme} = useContext(ThemeContext);\n\n    const style = isLightTheme ? {color: lightTheme.color, backgroundColor: lightTheme.footerColor} : {color: darkTheme.color, backgroundColor: darkTheme.footerColor}\n\n    return (\n        <div className=\"footer\" style={style}>\n            <p>a simple todo app.</p>\n            <ThemeToggle />\n        </div>\n    );\n}\n\nexport default Footer;","import React, { useState, useContext } from \"react\";\nimport \"./InputArea.css\";\nimport {ThemeContext} from './ThemeContext';\n\nfunction InputArea(props){\n    const [todoItem, setTodoItem] = useState('');\n    const [isMouseEnter, setIsMouseEnter] = useState(false);\n    const {isLightTheme, lightTheme, darkTheme} = useContext(ThemeContext);\n\n    const inputAreaStyle = isLightTheme ? {backgroundColor: lightTheme.footerColor} : {backgroundColor: darkTheme.footerColor};\n    const buttonStyle = (isLightTheme) ?\n        (isMouseEnter ? \n            {backgroundColor: lightTheme.itemBackgroundOnHover, color: lightTheme.color} :  \n            {backgroundColor: lightTheme.itemBackground, color: lightTheme.color})\n    :\n        (isMouseEnter ? \n            {backgroundColor: darkTheme.itemBackgroundOnHover, color: darkTheme.color} : \n            {backgroundColor: darkTheme.itemBackground, color: darkTheme.color})\n    const textboxStyle = isLightTheme ? {backgroundColor: lightTheme.itemBackground, color: lightTheme.color} : {backgroundColor: darkTheme.itemBackground, color: darkTheme.color}\n\n\n    function handleChange(event){\n        const {value} = event.target;\n        setTodoItem(value);\n    }\n\n    function handleClick(event){\n        event.preventDefault();\n        setTodoItem('');\n        todoItem !== '' && props.handleSubmit(todoItem);\n    }\n\n    return (\n        <div className=\"input-area\" style={inputAreaStyle}>\n            <form>\n                <input name=\"todoItem\" type=\"text\" placeholder=\"Add a ToDo item...\" value={todoItem} onChange={handleChange} style={textboxStyle} />\n                <button onClick={handleClick} style={buttonStyle} onMouseEnter={() => setIsMouseEnter(true)} onMouseLeave={() => setIsMouseEnter(false)}>+</button>\n            </form>\n        </div>\n    );\n}\n\nexport default InputArea;","import React, {useState, useEffect} from 'react';\nimport uuidv4 from 'uuid/v4';\nimport TodoList from \"./TodoList\";\nimport Footer from \"./Footer\";\nimport InputArea from \"./InputArea\";\nimport ThemeContextProvider from \"./ThemeContext\";\nimport {DragDropContext, Droppable} from 'react-beautiful-dnd';\n\nfunction App(){\n  const [data, setData] = useState(JSON.parse(localStorage.getItem('todoList')) || []);\n\n  function handleItemClick(id){\n    setData(prev => prev.map(item => id === item.id ? {id: item.id, text: item.text, completed: !item.completed} : item));\n  }\n\n  function handleSubmit(todoItem){\n    todoItem.replace(/\\s/g, '').length && \n    setData(prev => prev.concat({\n      id: uuidv4(),\n      text: todoItem,\n      completed: false\n    }))\n  }\n  \n  function handleRemoveClick(id){\n    setData(prev => prev.filter(item => id !== item.id));\n  }\n\n  function handleUnload(){\n    localStorage.setItem('todoList', JSON.stringify(data));\n  }\n\n  useEffect(() => {\n    window.addEventListener('beforeunload', handleUnload)\n    return () => {window.removeEventListener('beforeunload', handleUnload)};\n  });\n\n  function onDragEnd(result){\n    const {destination, source} = result;\n    if (destination && destination.index !== source.index){\n      const newArray = Array.from(data)\n      newArray.splice(source.index, 1);\n      newArray.splice(destination.index, 0, data[source.index])\n      setData(newArray);\n    }\n  }\n\n  return (\n      <ThemeContextProvider>\n        <DragDropContext onDragEnd={onDragEnd}>\n          <Droppable droppableId={uuidv4()}>\n            {(provided) => (\n              <TodoList {...provided.droppableProps} innerRef={provided.innerRef} handleItemClick={handleItemClick} data={data} handleRemoveClick={handleRemoveClick} placeholder={provided.placeholder}/>\n            )}\n          </Droppable>\n        </DragDropContext>\n        <InputArea handleSubmit={handleSubmit}/>\n        <Footer />\n      </ThemeContextProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}